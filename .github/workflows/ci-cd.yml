name: CI/CD Pipeline

on:
  push:
    branches:
      # - develop
      - staging
      - master
  pull_request:
    branches:
      # - develop
      - staging
      - master

env:
  IMAGE_NAME: eduardo/ese-message-broker

jobs:
  build-and-test:
    name: üõ†Ô∏è Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

  build-and-push-docker:
    name: üê≥ Build & Push Docker
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            -t $IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: Tag & push latest (master)
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

  # sonar-scan:
  #   name: üîç SonarQube Analysis
  #   needs: build-and-lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@v1
  #       with:
  #         projectKey: your-org_ese-message-broker
  #         organization: your-org
  #         token: ${{ secrets.SONAR_TOKEN }}
