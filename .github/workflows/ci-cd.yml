name: CI/CD Pipeline

on:
  push:
    branches:
      # - develop
      - staging
      - master
  pull_request:
    branches:
      # - develop
      - staging
      - master

env:
  IMAGE_NAME: schorka1/ese-tracking

jobs:
  build-and-test:
    name: üõ†Ô∏è Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

  sonarcloud:
      name: üîç SonarCloud Analysis
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Install dependencies
          run: npm ci

        - name: Run SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          with:
            organization: your-sonarcloud-org     # ex: eduardo-schork
            projectKey: eduardo-schork_ese-tracking
            projectName: ese-tracking
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  build-and-push-docker:
    name: üê≥ Build & Push Docker
    needs: [build-and-test, sonarcloud]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            -t $IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: Tag & push latest (master)
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
